{"version":3,"sources":["components/Header.js","components/Lesson.js","components/Main.js","components/App.js","serviceWorker.js","index.js","components/img/logo.svg"],"names":["Header","className","src","logo","alt","React","Component","Lesson","props","state","isModalOpen","this","setState","modal","name","introduction","onClick","handleClickClose","handleClickLesson","image","Main","map","lessonItem","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"gOAgBeA,E,iLAZX,OACE,6BACE,yBAAKC,UAAU,UACb,yBAAKA,UAAU,eACb,yBAAKC,IAAKC,IAAMC,IAAI,gB,GANXC,IAAMC,WCmDZC,E,YAnDb,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,CAACC,aAAa,GAFV,E,iFAMjBC,KAAKC,SAAS,CAACF,aAAa,M,yCAK5BC,KAAKC,SAAS,CAACF,aAAa,M,+BAGpB,IACJG,EADG,OAsBP,OApBIF,KAAKF,MAAMC,cACbG,EACE,yBAAKZ,UAAU,SACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,iBACf,yBAAKA,UAAU,sBACb,4BAAKU,KAAKH,MAAMM,MAChB,2BAAIH,KAAKH,MAAMO,eAEjB,4BACEd,UAAU,kBACVe,QAAU,WAAM,EAAKC,qBAFvB,YAYN,yBAAKhB,UAAU,eACb,yBACEA,UAAU,cACVe,QAAS,WAAO,EAAKE,sBAErB,2BAAIP,KAAKH,MAAMM,MACf,yBAAKZ,IAAKS,KAAKH,MAAMW,SAEtBN,O,GA9CYR,IAAMC,WC0EZc,E,iLA3BX,OACE,yBAAKnB,UAAU,gBACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,kBACb,4CACA,2DAEF,yBAAKA,UAAU,oBACb,yJACA,yBAAKA,UAAU,aApDJ,CACjB,CACEa,KAAM,eACNK,MAAO,6CACPJ,aAAc,4QAEhB,CACED,KAAM,eACNK,MAAO,6CACPJ,aAAc,4QAEhB,CACED,KAAM,eACNK,MAAO,6CACPJ,aAAc,4QAEhB,CACED,KAAM,eACNK,MAAO,6CACPJ,aAAc,4QAEhB,CACED,KAAM,eACNK,MAAO,6CACPJ,aAAc,4QAEhB,CACED,KAAM,eACNK,MAAO,6CACPJ,aAAc,4QAEhB,CACED,KAAM,eACNK,MAAO,6CACPJ,aAAc,4QAEhB,CACED,KAAM,eACNK,MAAO,6CACPJ,aAAc,6QAcIM,KAAI,SAACC,GACf,OACE,kBAAC,EAAD,CACER,KAAMQ,EAAWR,KACjBK,MAAOG,EAAWH,MAClBJ,aAAcO,EAAWP,0B,GA5D1BV,IAAMC,WCYViB,E,iLATX,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GALUlB,IAAMC,WCQJkB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB,kBEnInBC,EAAOC,QAAU,IAA0B,kC","file":"static/js/main.50a96750.chunk.js","sourcesContent":["import React from 'react';\nimport logo from './img/logo.svg';\nclass Header extends React.Component {\n  render() {\n    return (\n      <div>\n        <div className='header'>\n          <div className='header-logo'>\n            <img src={logo} alt=\"Logo\" />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React from 'react';\nclass Lesson extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {isModalOpen: false};\n  }\n\n  handleClickLesson() {\n    this.setState({isModalOpen: true});\n  }\n\n  // handleClickCloseメソッドを定義してください\n  handleClickClose(){\n    this.setState({isModalOpen: false});\n  }\n\n  render() {\n    let modal;\n    if (this.state.isModalOpen) {\n      modal = (\n        <div className='modal'>\n          <div className='modal-inner'>\n            <div className='modal-header'></div>\n            <div className='modal-introduction'>\n              <h2>{this.props.name}</h2>\n              <p>{this.props.introduction}</p>\n            </div>\n            <button\n              className='modal-close-btn'\n              onClick= {()=> {this.handleClickClose()}}\n            >\n              Close\n            </button>\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div className='lesson-card'>\n        <div\n          className='lesson-item'\n          onClick={() => {this.handleClickLesson()}}\n        >\n          <p>{this.props.name}</p>\n          <img src={this.props.image} />\n        </div>\n        {modal}\n      </div>\n    );\n  }\n}\n\nexport default Lesson;\n","import React from 'react';\nimport Lesson from './Lesson';\n\nclass Main extends React.Component {\n  render() {\n    const lessonList = [\n      {\n        name: 'Hello Item A',\n        image: 'https://picsum.photos/g/600/400?image=1000',\n        introduction: 'It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using Content here, content here',\n      },\n      {\n        name: 'Hello Item B',\n        image: 'https://picsum.photos/g/600/400?image=1002',\n        introduction: 'It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using Content here, content here',\n      },\n      {\n        name: 'Hello Item C',\n        image: 'https://picsum.photos/g/600/400?image=1003',\n        introduction: 'It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using Content here, content here',\n      },\n      {\n        name: 'Hello Item D',\n        image: 'https://picsum.photos/g/600/400?image=1004',\n        introduction: 'It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using Content here, content here',\n      },\n      {\n        name: 'Hello Item E',\n        image: 'https://picsum.photos/g/600/400?image=1005',\n        introduction: 'It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using Content here, content here',\n      },\n      {\n        name: 'Hello Item F',\n        image: 'https://picsum.photos/g/600/400?image=1006',\n        introduction: 'It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using Content here, content here',\n      },\n      {\n        name: 'Hello Item G',\n        image: 'https://picsum.photos/g/600/400?image=1008',\n        introduction: 'It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using Content here, content here',\n      },\n      {\n        name: 'Hello Item H',\n        image: 'https://picsum.photos/g/600/400?image=1009',\n        introduction: 'It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using Content here, content here',\n      },\n    ];\n\n    return (\n      <div className='main-wrapper'>\n        <div className='main'>\n          <div className='copy-container'>\n            <h1>Hello, React</h1>\n            <h2>lorem ipsum dolor sit amet</h2>\n          </div>\n          <div className='lesson-container'>\n            <h3>Items Lorem ipsum dolor sit amet consectetur adipisicing elit Voluptatem dicta rerum illum in voluptas quam modi id ipsam</h3>\n            <div className='org_cards'>\n              {lessonList.map((lessonItem) => {\n                return (\n                  <Lesson\n                    name={lessonItem.name}\n                    image={lessonItem.image}\n                    introduction={lessonItem.introduction}\n                  />\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Main;\n","import React from 'react';\nimport Header from './Header';\nimport Main from './Main';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <Header />\n        <Main />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.bfb372c8.svg\";"],"sourceRoot":""}